###############################################################################
# Sloan Digital Sky Survey (SDSS)
# N. Padmanabhan, D. Schlegel, D. Finkbeiner, R. H. Lupton, C. P. Loomis
###############################################################################

SHELL = /bin/sh
#
# Set by configure
#
prefix = @prefix@
EUPS_PATH = @EUPS_PATH@
EUPS_DIR = @EUPS_DIR@
SETUP_ALIASES = @SETUP_ALIASES@
EUPS_DB = $(shell perl -e 'foreach $$d (split(":","$(EUPS_PATH)")) { print "$$d/ups_db\n"}')
#
export prefix EUPS_PATH EUPS_DIR SETUP_ALIASES
#
SUBDIRS = bin doc etc ups

.PHONY : show install clean
install : show
	@if [ "$(EUPS_PATH)" = "" ]; then \
		echo You have not specified EUPS_PATH >&2; \
		exit 1; \
	fi 

	@ for d in $(shell perl -e 'foreach $$d (split(":","$(EUPS_PATH)")) { print "$$d\n"}'); do \
		if [ ! -d $$d ]; then \
			mkdir -p $$d; \
		fi; \
	done

	@ for db in $(EUPS_DB); do \
		if [ -d $$db ]; then \
			echo "EUPS database $$db already exists"; \
		else \
			mkdir -p $$db; \
		fi; \
	done

	@:
	@: Check the inode number for . and $(EUPS_DIR) to find out if two
	@: directories are the same\; they may have different names due to
	@: symbolic links and automounters
	@:
	@if [ -d $(EUPS_DIR) ]; then \
	    if [ `ls -id $(EUPS_DIR) | awk '{print $$1}'` = `ls -id . | awk '{print $$1}'` ]; then \
		echo "The destination directory is the same" \
			"as the current directory; aborting." >&2; \
		echo ""; \
		exit 1; \
	   fi; \
	fi

	@ $(RM) -r $(EUPS_DIR)
	@ mkdir -p $(EUPS_DIR)
	@ for f in $(SUBDIRS); do \
		(mkdir $(EUPS_DIR)/$$f; cd $$f ; echo In $$f; $(MAKE) $(MFLAGS) install ); \
	done
	- cp Makefile README  Release_Notes gpl.txt $(EUPS_DIR)
	@echo "Remember to source $(EUPS_DIR)/bin/setups.{c,z,}sh"
declare :
	@vers="$$(bin/eups_distrib --version 2>&1 | awk '{print $$2}')"; \
	eups_declare --root $(EUPS_DIR) eups $$vers && \
	echo eups_declare --root $(EUPS_DIR) eups $$vers
show :
	@echo "You will be installing ups in \$$EUPS_DIR  = $(EUPS_DIR)"
	@echo "Ups will look for products in \$$EUPS_PATH = $(EUPS_PATH)"
	@echo "Your EUPS database[s] will be              $(EUPS_DB)"
	@vers="$$(bin/eups --version 2>&1 | awk '{print $$2}')"; \
	 echo "Your EUPS version is $$vers"
#
# Rebuild configure; almost no-one should need to do this
#
configure : configure.ac
	@ echo "Rebuilding ./configure"
	autoconf
clean :
	- /bin/rm -f *~ core
	@ for f in $(SUBDIRS); do \
		(cd $$f ; echo In $$f; $(MAKE) $(MFLAGS) clean ); \
	done
