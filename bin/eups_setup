#!/usr/bin/env python
#
# The EUPS setup programme
#
import sys, os

# try to recover from an incomplete PYTHONPATH
try:
    import eups.setupcmd
except ImportError:
    eupsdir = None
    if os.environ.has_key("EUPS_DIR"):
        eupsdir = os.environ["EUPS_DIR"]
    else:
        # the first item on sys.path is the script directory (bin)
        eupsdir = os.path.dirname(sys.path[0])
        if not os.path.isabs(eupsdir):
            eupsdir = os.path.join(os.environ['PWD'], eupsdir)
    if eupsdir:
        sys.path[0] = os.path.join(eupsdir, "python")
    else:
        raise
    import eups.setupcmd

allowedDebugOptions = ["raise"]

# parse the command line
setup = eups.setupcmd.EupsSetup()

# set debugging features
debugOptions = setup.opts.debug.split(":")
allowRaise = "raise" in debugOptions

# load any local customizations
verbosity = setup.opts.verbose
if setup.opts.quiet:
    verbosity = -1
eups.hooks.loadCustomization(verbosity)

# run the command
if allowRaise:
    sys.exit(setup.run())
else:
    try:
        status = setup.run()            # calling sys.exit here raises SystemExit which is caught...
    except Exception, e:
        setup.err(str(e))
        if hasattr(e, "status"):
            status = e.status
        else:
            status = 9
        print("false")

sys.exit(status)


